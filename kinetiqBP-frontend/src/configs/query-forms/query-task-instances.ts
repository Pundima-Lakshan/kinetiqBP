import { AnalysisQueryArgs, FormSchema } from '@/services';

export const getQuerTaskFormSchema = () =>
  ({
    components: [
      {
        text: '# query task instances\n\nFill in the details below to query task instances.',
        type: 'text',
        id: 'field_intro_task',
      },
      {
        label: 'Start',
        key: 'start',
        type: 'textfield',
        id: 'Field_start',
      },
      {
        label: 'Size',
        key: 'size',
        type: 'textfield',
        id: 'Field_size',
      },
      {
        label: 'Sort',
        key: 'sort',
        type: 'textfield',
        id: 'Field_sort',
      },
      {
        label: 'Order',
        key: 'order',
        type: 'textfield',
        id: 'Field_order',
      },
      {
        label: 'Task ID',
        key: 'taskId',
        type: 'textfield',
        id: 'Field_taskId',
      },
      {
        label: 'Process Instance ID',
        key: 'processInstanceId',
        type: 'textfield',
        id: 'Field_processInstanceId',
      },
      {
        label: 'Process Instance ID With Children',
        key: 'processInstanceIdWithChildren',
        type: 'textfield',
        id: 'Field_processInstanceIdWithChildren',
      },
      {
        label: 'Without Process Instance ID',
        key: 'withoutProcessInstanceId',
        type: 'checkbox',
        id: 'Field_withoutProcessInstanceId',
      },
      {
        label: 'Process Business Key',
        key: 'processBusinessKey',
        type: 'textfield',
        id: 'Field_processBusinessKey',
      },
      {
        label: 'Process Business Key Like',
        key: 'processBusinessKeyLike',
        type: 'textfield',
        id: 'Field_processBusinessKeyLike',
      },
      {
        label: 'Process Definition ID',
        key: 'processDefinitionId',
        type: 'textfield',
        id: 'Field_processDefinitionId',
      },
      {
        label: 'Process Definition Key',
        key: 'processDefinitionKey',
        type: 'textfield',
        id: 'Field_processDefinitionKey',
      },
      {
        label: 'Process Definition Key Like',
        key: 'processDefinitionKeyLike',
        type: 'textfield',
        id: 'Field_processDefinitionKeyLike',
      },
      {
        label: 'Process Definition Name',
        key: 'processDefinitionName',
        type: 'textfield',
        id: 'Field_processDefinitionName',
      },
      {
        label: 'Process Definition Name Like',
        key: 'processDefinitionNameLike',
        type: 'textfield',
        id: 'Field_processDefinitionNameLike',
      },
      {
        label: 'Execution ID',
        key: 'executionId',
        type: 'textfield',
        id: 'Field_executionId',
      },
      {
        label: 'Task Name',
        key: 'taskName',
        type: 'textfield',
        id: 'Field_taskName',
      },
      {
        label: 'Task Name Like',
        key: 'taskNameLike',
        type: 'textfield',
        id: 'Field_taskNameLike',
      },
      {
        label: 'Task Name Like Ignore Case',
        key: 'taskNameLikeIgnoreCase',
        type: 'textfield',
        id: 'Field_taskNameLikeIgnoreCase',
      },
      {
        label: 'Task Description',
        key: 'taskDescription',
        type: 'textfield',
        id: 'Field_taskDescription',
      },
      {
        label: 'Task Description Like',
        key: 'taskDescriptionLike',
        type: 'textfield',
        id: 'Field_taskDescriptionLike',
      },
      {
        label: 'Task Definition Key',
        key: 'taskDefinitionKey',
        type: 'textfield',
        id: 'Field_taskDefinitionKey',
      },
      {
        label: 'Task Definition Key Like',
        key: 'taskDefinitionKeyLike',
        type: 'textfield',
        id: 'Field_taskDefinitionKeyLike',
      },
      {
        label: 'Task Definition Keys',
        key: 'taskDefinitionKeys',
        type: 'textfield',
        id: 'Field_taskDefinitionKeys',
      },
      {
        label: 'Task Category',
        key: 'taskCategory',
        type: 'textfield',
        id: 'Field_taskCategory',
      },
      {
        label: 'Task Category In',
        key: 'taskCategoryIn',
        type: 'textfield',
        id: 'Field_taskCategoryIn',
      },
      {
        label: 'Task Category Not In',
        key: 'taskCategoryNotIn',
        type: 'textfield',
        id: 'Field_taskCategoryNotIn',
      },
      {
        label: 'Task Without Category',
        key: 'taskWithoutCategory',
        type: 'checkbox',
        id: 'Field_taskWithoutCategory',
      },
      {
        label: 'Task Delete Reason',
        key: 'taskDeleteReason',
        type: 'textfield',
        id: 'Field_taskDeleteReason',
      },
      {
        label: 'Task Delete Reason Like',
        key: 'taskDeleteReasonLike',
        type: 'textfield',
        id: 'Field_taskDeleteReasonLike',
      },
      {
        label: 'Task Assignee',
        key: 'taskAssignee',
        type: 'textfield',
        id: 'Field_taskAssignee',
      },
      {
        label: 'Task Assignee Like',
        key: 'taskAssigneeLike',
        type: 'textfield',
        id: 'Field_taskAssigneeLike',
      },
      {
        label: 'Task Owner',
        key: 'taskOwner',
        type: 'textfield',
        id: 'Field_taskOwner',
      },
      {
        label: 'Task Owner Like',
        key: 'taskOwnerLike',
        type: 'textfield',
        id: 'Field_taskOwnerLike',
      },
      {
        label: 'Task Involved User',
        key: 'taskInvolvedUser',
        type: 'textfield',
        id: 'Field_taskInvolvedUser',
      },
      {
        label: 'Task Priority',
        key: 'taskPriority',
        type: 'textfield',
        id: 'Field_taskPriority',
      },
      {
        label: 'Task Min Priority',
        key: 'taskMinPriority',
        type: 'textfield',
        id: 'Field_taskMinPriority',
      },
      {
        label: 'Task Max Priority',
        key: 'taskMaxPriority',
        type: 'textfield',
        id: 'Field_taskMaxPriority',
      },
      {
        label: 'Finished',
        key: 'finished',
        type: 'checkbox',
        id: 'Field_finished',
      },
      {
        label: 'Process Finished',
        key: 'processFinished',
        type: 'checkbox',
        id: 'Field_processFinished',
      },
      {
        label: 'Parent Task ID',
        key: 'parentTaskId',
        type: 'textfield',
        id: 'Field_parentTaskId',
      },
      {
        label: 'Due Date',
        key: 'dueDate',
        type: 'datetime',
        id: 'Field_dueDate',
      },
      {
        label: 'Due Date After',
        key: 'dueDateAfter',
        type: 'datetime',
        id: 'Field_dueDateAfter',
      },
      {
        label: 'Due Date Before',
        key: 'dueDateBefore',
        type: 'datetime',
        id: 'Field_dueDateBefore',
      },
      {
        label: 'Without Due Date',
        key: 'withoutDueDate',
        type: 'checkbox',
        id: 'Field_withoutDueDate',
      },
      {
        label: 'Task Created On',
        key: 'taskCreatedOn',
        type: 'datetime',
        id: 'Field_taskCreatedOn',
      },
      {
        label: 'Task Created Before',
        key: 'taskCreatedBefore',
        type: 'datetime',
        id: 'Field_taskCreatedBefore',
      },
      {
        label: 'Task Created After',
        key: 'taskCreatedAfter',
        type: 'datetime',
        id: 'Field_taskCreatedAfter',
      },
      {
        label: 'Task Completed On',
        key: 'taskCompletedOn',
        type: 'datetime',
        id: 'Field_taskCompletedOn',
      },
      {
        label: 'Task Completed Before',
        key: 'taskCompletedBefore',
        type: 'datetime',
        id: 'Field_taskCompletedBefore',
      },
      {
        label: 'Task Completed After',
        key: 'taskCompletedAfter',
        type: 'datetime',
        id: 'Field_taskCompletedAfter',
      },
      {
        label: 'Include Task Local Variables',
        key: 'includeTaskLocalVariables',
        type: 'checkbox',
        id: 'Field_includeTaskLocalVariables',
      },
      {
        label: 'Include Process Variables',
        key: 'includeProcessVariables',
        type: 'checkbox',
        id: 'Field_includeProcessVariables',
      },
      {
        label: 'Task Variables',
        key: 'taskVariables',
        type: 'textfield',
        id: 'Field_taskVariables',
      },
      {
        label: 'Process Variables',
        key: 'processVariables',
        type: 'textfield',
        id: 'Field_processVariables',
      },
      {
        label: 'Scope Definition ID',
        key: 'scopeDefinitionId',
        type: 'textfield',
        id: 'Field_scopeDefinitionId',
      },
      {
        label: 'Scope ID',
        key: 'scopeId',
        type: 'textfield',
        id: 'Field_scopeId',
      },
      {
        label: 'Without Scope ID',
        key: 'withoutScopeId',
        type: 'checkbox',
        id: 'Field_withoutScopeId',
      },
      {
        label: 'Scope Type',
        key: 'scopeType',
        type: 'textfield',
        id: 'Field_scopeType',
      },
      {
        label: 'Propagated Stage Instance ID',
        key: 'propagatedStageInstanceId',
        type: 'textfield',
        id: 'Field_propagatedStageInstanceId',
      },
      {
        label: 'Tenant ID',
        key: 'tenantId',
        type: 'textfield',
        id: 'Field_tenantId',
      },
      {
        label: 'Tenant ID Like',
        key: 'tenantIdLike',
        type: 'textfield',
        id: 'Field_tenantIdLike',
      },
      {
        label: 'Without Tenant ID',
        key: 'withoutTenantId',
        type: 'checkbox',
        id: 'Field_withoutTenantId',
      },
      {
        label: 'Without Delete Reason',
        key: 'withoutDeleteReason',
        type: 'checkbox',
        id: 'Field_withoutDeleteReason',
      },
      {
        label: 'Task Candidate Group',
        key: 'taskCandidateGroup',
        type: 'textfield',
        id: 'Field_taskCandidateGroup',
      },
      {
        label: 'Ignore Task Assignee',
        key: 'ignoreTaskAssignee',
        type: 'checkbox',
        id: 'Field_ignoreTaskAssignee',
      },
      {
        label: 'Root Scope ID',
        key: 'rootScopeId',
        type: 'textfield',
        id: 'Field_rootScopeId',
      },
      {
        label: 'Parent Scope ID',
        key: 'parentScopeId',
        type: 'textfield',
        id: 'Field_parentScopeId',
      },
    ],
    schemaVersion: 18,
    type: 'default',
    id: 'Form_taskQuery',
    versionTag: 'v1',
  }) as FormSchema;

export const filterQueryTasksArgs = (input: AnalysisQueryArgs) => {
  const validProperties = [
    'start',
    'size',
    'sort',
    'order',
    'taskId',
    'name',
    'nameLike',
    'nameLikeIgnoreCase',
    'description',
    'descriptionLike',
    'priority',
    'minimumPriority',
    'maximumPriority',
    'assignee',
    'assigneeLike',
    'owner',
    'ownerLike',
    'unassigned',
    'delegationState',
    'candidateUser',
    'candidateGroup',
    'candidateGroupIn',
    'ignoreAssignee',
    'involvedUser',
    'processInstanceId',
    'processInstanceIdWithChildren',
    'withoutProcessInstanceId',
    'processInstanceBusinessKey',
    'processInstanceBusinessKeyLike',
    'processDefinitionId',
    'processDefinitionKey',
    'processDefinitionName',
    'processDefinitionKeyLike',
    'processDefinitionNameLike',
    'executionId',
    'createdOn',
    'createdBefore',
    'createdAfter',
    'excludeSubTasks',
    'taskDefinitionKey',
    'taskDefinitionKeyLike',
    'taskDefinitionKeys',
    'dueDate',
    'dueBefore',
    'dueAfter',
    'withoutDueDate',
    'active',
    'includeTaskLocalVariables',
    'includeProcessVariables',
    'scopeDefinitionId',
    'scopeId',
    'withoutScopeId',
    'scopeType',
    'propagatedStageInstanceId',
    'tenantId',
    'tenantIdLike',
    'withoutTenantId',
    'candidateOrAssigned',
    'category',
    'categoryIn',
    'categoryNotIn',
    'withoutCategory',
    'rootScopeId',
    'parentScopeId',
    'taskVariables',
    'processInstanceVariables',
  ];

  const filteredObj = {};

  return filteredObj;

  validProperties.forEach((key) => {
    if (input.hasOwnProperty(key)) {
      filteredObj[key] = input[key];
    }
  });

  return filteredObj;
};
